dist: xenial

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/install
    # - $HOME/downloads # Sufficient to add miniconda.sh to TRAVIS cache.
    # - $HOME/miniconda # Add the installation to TRAVIS cache.
  apt: true
  pip: true

language: python
os:
  - linux
arch: 
  - amd64

compiler:
  - gcc
python:
  - "3.6"
  - "3.7"
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    # - gcc-4.8
    # - g++-4.8
    - mpich
    - libmpich-dev
    - build-essential
before_install:
  - echo $TRAVIS_PYTHON_VERSION
  - python --version
  - gcc --version
  - mpicc --version
  - mpirun --version
  - mkdir -p $HOME/install
  - export LD_LIBRARY_PATH="$HOME/install/lib:$LD_LIBRARY_PATH"
  - export PYTHONPATH=$TRAVIS_BUILD_DIR:$PYTHONPATH
  # - export CC=/usr/bin/gcc-4.8
  # - export CXX=/usr/bin/g++-4.8
install:
  - if [[ -f $HOME/install/lib/libfftw3.so && -f $HOME/install/include/fftw3.h && -f $HOME/install/lib/libfftw3f.so ]]; then
        echo "FFTW3 already installed.";
    else
        echo "Installing FFTW3.";
        wget http://www.fftw.org/fftw-3.3.8.tar.gz;
        tar -xzvf fftw-3.3.8.tar.gz > /dev/null;
        cd fftw-3.3.8;
        ./configure --prefix=$HOME/install/ --enable-openmp --enable-threads --enable-single --enable-sse2 --enable-avx --enable-avx2 --enable-fma --enable-avx-128-fma --with-our-malloc --disable-fortran --enable-shared > /dev/null;
        make -j4 > /dev/null;
        make install > /dev/null;
    fi
  - cd $TRAVIS_BUILD_DIR
  - python -m pip install --upgrade pip setuptools wheel coverage coveralls pytest # cpp-coveralls
  - pip install -r requirements.txt
before_script:
  - python blond/compile.py -p --with-fftw-threads --with-fftw-lib=$HOME/install/lib --with-fftw-header=$HOME/install/include --flags='--coverage'
  - export OMP_NUM_THREADS=2
script:
  # - echo "Running tests"
  - coverage run -m pytest -v --ignore=unittests/integration/test_validate_mpi.py unittests/ && coverage run --append -m pytest -v unittests/integration/test_validate_mpi.py
  # - coverage run -m pytest -v unittests/utils/test_blondmath.py
after_success:
  # echo "Success"
  - coverage report
  - if [[ $TRAVIS_PYTHON_VERSION != "3.6" ]]; then exit 0; fi;
  - if ! [[ "$TRAVIS_PULL_REQUEST" = ^[0-9]+$ ]]; then exit 0 ; fi ;
  - if [[ "$TRAVIS_BRANCH" != "master" ]]; then exit 0 ; fi ;
  - python -m pip install --upgrade pyqt5 sphinx sphinxcontrib-napoleon sphinx-autopackagesummary
  # - mkdir -p ~/.ssh
  # Needs ssh key generated using "ssh-keygen -f key_fname -t rsa"
  # Env variable is private key encoded using "cat privatekey | base64 -w0" to avoid str manipulations
  # - (echo "$GITHUB_TOKEN_DOCS" | base64 -d) > ~/.ssh/id_rsa
  # - chmod 700 ~/.ssh/id_rsa
  # - eval "$(ssh-agent -s)"
  # - ssh-add ~/.ssh/id_rsa
  # - ssh-keyscan -t rsa 'github.com' >> ~/.ssh/known_hosts 
  - git config --global user.name travis-ci
  - git config --global user.email travis@example.org
  - cd __doc
  - make html
  - git clone --branch=gh-pages https://github.com/${TRAVIS_REPO_SLUG}.git BLonD
  - cd BLonD
  - git remote rm origin
  - git remote add origin https://blond-admin:${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git && git remote -v && cp -r ../_build/html/* . && git add -A && git status && git commit -m "Updated documentation" -n && git push origin gh-pages
  - cd $TRAVIS_BUILD_DIR
  - coveralls
# branches:
#   only:
#   - master
